# Generated by Django 5.1.7 on 2025-03-17 18:30

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ciclo",
            fields=[
                (
                    "nombre",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Grupo",
            fields=[
                (
                    "nombre",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                (
                    "ciclo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="grupos",
                        to="seguimientos.ciclo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Modulo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                ("curso", models.IntegerField()),
                ("año_academico", models.CharField(db_index=True, max_length=10)),
                (
                    "ciclo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="modulos",
                        to="seguimientos.ciclo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profesor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("nombre", models.CharField(max_length=255)),
                ("activo", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="profesor_set",
                        related_query_name="profesor",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="profesor_set",
                        related_query_name="profesor",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Docencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grupo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="docencias",
                        to="seguimientos.grupo",
                    ),
                ),
                (
                    "modulo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="docencias",
                        to="seguimientos.modulo",
                    ),
                ),
                (
                    "profesor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="docencias",
                        to="seguimientos.profesor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UnidadDeTemario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_tema", models.IntegerField()),
                ("titulo", models.CharField(max_length=255)),
                ("impartido", models.BooleanField(default=False)),
                (
                    "modulo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unidades_de_temario",
                        to="seguimientos.modulo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seguimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ultimo_contenido_impartido", models.CharField(max_length=255)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("ATRASADO", "Atrasado"),
                            ("AL_DIA", "Al día"),
                            ("ADELANTADO", "Adelantado"),
                        ],
                        default="AL_DIA",
                        max_length=10,
                    ),
                ),
                ("justificacion_estado", models.CharField(blank=True, max_length=255)),
                ("cumple_programacion", models.BooleanField(default=True)),
                (
                    "justificacion_cumple_programacion",
                    models.CharField(blank=True, max_length=255),
                ),
                ("mes", models.IntegerField()),
                (
                    "docencia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seguimientos",
                        to="seguimientos.docencia",
                    ),
                ),
                (
                    "temario_alcanzado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="seguimientos",
                        to="seguimientos.unidaddetemario",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="modulo",
            index=models.Index(
                fields=["año_academico"], name="seguimiento_año_aca_6999da_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="modulo",
            index=models.Index(fields=["ciclo"], name="seguimiento_ciclo_i_e36713_idx"),
        ),
        migrations.AddIndex(
            model_name="docencia",
            index=models.Index(
                fields=["profesor", "modulo"], name="seguimiento_profeso_e0cb18_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="docencia",
            index=models.Index(
                fields=["grupo", "modulo"], name="seguimiento_grupo_i_4dbbb6_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="docencia",
            unique_together={("profesor", "grupo", "modulo")},
        ),
        migrations.AddIndex(
            model_name="seguimiento",
            index=models.Index(fields=["mes"], name="seguimiento_mes_b761c2_idx"),
        ),
        migrations.AddIndex(
            model_name="seguimiento",
            index=models.Index(
                fields=["docencia", "mes"], name="seguimiento_docenci_09a7fa_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="seguimiento",
            unique_together={("docencia", "mes")},
        ),
    ]
